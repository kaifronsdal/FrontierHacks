{"version":3,"sources":["logo.svg","components/electron_header.js","components/message_card.js","views/display_message_cards.js","components/electron_footer.js","views/create_new_message.js","components/create_new_card.js","pages/main_page.js","components/chat_input.js","components/message.js","views/display_messages.js","components/back_bar.js","pages/messaging_page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ElectronHeader","style","display","backgroundColor","maxWidth","src","size","icon","className","right","marginTop","position","Component","colorList","MessageCard","props","name","timestamp","preview","state","color","Math","floor","random","length","loading","marginBottom","left","type","justify","align","span","push","textAlign","fontWeight","this","pull","DisplayMessageCards","cards_list","console","log","message_cards","generateCards","map","message_card","index","cur_name","cur_timestamp","cur_preview","marginLeft","marginRight","key","to","ElectronFooter","CreateNewMessage","visible","show","username","message","showModal","setState","handleOk","e","create_new","forceUpdate","close","handleCancel","target","value","onOk","onCancel","title","onChange","handleUsernameChange","bind","placeholder","handleMessageChange","CreateNewCard","onClick","closeModal","fontSize","MainPage","createNewMessage","initial_text","date","Date","getHours","getMinutes","message_list","Search","Input","ChatInput","onSend","text","onSearch","enterButton","Message","mine","offset","DisplayMessages","getMessages","messageHTML","renderMessages","MessagingPage","messages","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d26cc6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, {Component} from 'react';\nimport {Avatar, Row} from \"antd\";\n\nclass ElectronHeader extends Component {\n    render() {\n        return (\n            <Row style={{display:\"flex\"}}>\n                <div style={{backgroundColor:\"white\"}}>\n                <img style={{maxWidth:\"47%\"}} src=\"logo.png\"/>\n                </div>\n                <Avatar size=\"large\" icon=\"user\" className=\"vertical-center\" style={{right:\"2.5%\", marginTop:\"2.5%\", position:\"absolute\"}}/>\n            </Row>\n            // <p style={{fontSize:30}}> Electron Chat</p>\n        )\n    }\n}\n\nexport default ElectronHeader","import React, {Component} from 'react';\nimport {Card, Tag, Row, Avatar, Col} from \"antd\";\nimport \"./message_card.css\"\nconst colorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"];\nclass MessageCard extends Component {\n    constructor(props) {\n        super(props)\n        this.name = props.name\n        this.timestamp = props.timestamp\n        this.preview = props.preview\n        this.state = {\n            color : colorList[Math.floor(Math.random() * colorList.length)]\n        }\n        // console.log()\n        // this.setState({color : \"#f56a00\"})\n    }\n\n    render() {\n        return (\n            <Card size=\"small\" loading={false}>\n                <Row style={{marginTop:\"0%\", marginBottom:\"0%\", left:\"-10%\"}} type=\"flex\" justify=\"space-around\" align=\"middle\">\n                    <Col span={16} push={2}>\n                        <Row style={{display:\"flex\"}}>\n                        {/*<div>*/}\n                        <Col span={8}>\n                            <p style={{textAlign:\"left\", fontWeight:\"bold\"}} className=\"text\">{this.name}</p>\n                        </Col>\n                        <Col push={16}>\n                            <Tag style={{right:\"0px\", align:\"right\"}} color=\"#2db7f5\">{this.timestamp}</Tag>\n                        </Col>\n                        </Row>\n                        <Row>\n                            <p className=\"text\">{this.preview}</p>\n                        </Row>\n                        {/*</div>*/}\n\n                    </Col>\n                    <Col span={3} pull={20}>\n                    <Avatar size=\"large\" style={{backgroundColor:this.state.color}}>{this.name[0]}</Avatar>\n                    </Col>\n                </Row>\n            </Card>\n        )\n    }\n}\n\nexport default MessageCard","import React, {Component} from 'react'\nimport MessageCard from \"../components/message_card\";\nimport {Col} from \"antd\";\nimport {Link} from 'react-router-dom';\n\nclass DisplayMessageCards extends Component {\n    constructor(props) {\n        super(props)\n        this.cards_list = props.cards_list\n        console.log(\"cards\", this.cards_list)\n        this.message_cards = this.generateCards()\n    }\n\n    generateCards() {\n        const message_cards = (\n            <div>\n                {this.cards_list.map(function(message_card, index) {\n                    let cur_name = message_card[\"name\"]\n                    let cur_timestamp = message_card[\"timestamp\"]\n                    let cur_preview = message_card[\"preview\"]\n                    return (\n                        <div style={{marginTop:\".1%\", marginLeft:\"0%\", marginRight:\"0%\"}}>\n                            <MessageCard key={index} name={cur_name} timestamp={cur_timestamp} preview={cur_preview}/>\n                        </div>\n                    )\n                    // return <p key={index}>you</p>;\n                })}\n            </div>\n        )\n        return message_cards\n    }\n\n    render() {\n        const message_cards =  this.generateCards()// this.message_cards\n        // console.log(message_cards)\n        return (\n            // {message_cards}\n            <div>\n                <Link to=\"/messages\">\n            {message_cards}\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default DisplayMessageCards","import React, {Component} from \"react\";\n\nclass ElectronFooter extends Component {\n    render() {\n        return (\n            <footer>\n            <div style={{backgroundColor:\"white\", marginTop:\"1%\"}}>\n                <p>© AtomicNet 2019</p>\n            </div>\n            </footer>\n        )\n    }\n}\n\nexport default ElectronFooter","import React, {Component} from \"react\";\nimport {Form, Input, Modal} from \"antd\";\n\nclass CreateNewMessage extends Component {\n    constructor(props) {\n        super(props)\n        this.username = \"\"\n        this.message = \"\"\n    }\n    state = { visible: this.props.show , username: \"\",\n        message: \"\"};\n    showModal = () => {\n        this.setState({\n            visible: true,\n            username: \"\",\n            message: \"\"\n        });\n    };\n\n    handleOk = e => {\n        // this.props.visible = false\n        console.log(\"YOOOOOO\")\n        this.props.create_new(this.state.username, this.state.message)\n        this.forceUpdate()\n        this.props.close()\n        // this.forceUpdate()\n        // console.log(e);\n        // this.setState({\n        //     visible: false,\n        // });\n    };\n\n    handleCancel = e => {\n        this.props.close()\n        // this.props.visible = false\n        // this.forceUpdate()\n        // console.log(e);\n        // this.setState({\n        //     visible: false,\n        // });\n    };\n    handleUsernameChange(e) {\n        this.setState({\n            username: e.target.value\n        })\n        // console.log(this.state.username)\n    }\n\n    handleMessageChange(e) {\n        // console.log(\"message \" + e)\n        this.setState({\n                message: e.target.value\n            })\n        // console.log(this.state.message)\n    }\n\n\n    render() {\n        return (\n            <Modal visible={this.props.visible}\n                   onOk={this.handleOk}\n                   onCancel={this.handleCancel}\n                   title=\"Create New Message\"\n            >\n                <Input onChange={this.handleUsernameChange.bind(this)} value={this.state.username} style={{marginBottom:\"1%\"}} placeholder=\"Recipient Username\"/>\n                <Input onChange={this.handleMessageChange.bind(this)} value={this.state.message} placeholder=\"First Message\"/>\n            </Modal>\n        )\n    }\n}\nexport default CreateNewMessage","import React, {Component} from \"react\"\nimport {Card, Icon, Row} from \"antd\";\nimport CreateNewMessage from \"../views/create_new_message\";\n\nclass CreateNewCard extends Component {\n    constructor(props) {\n        super(props)\n        this.showModal = false\n        console.log(\"HERERERRE\", this.showModal)\n    }\n\n\n    onClick = () => {\n        console.log(\"state modal\", this.showModal)\n        if (this.showModal) {\n            this.showModal = false\n        }\n        else if (!this.showModal) {\n            this.showModal = true\n        }\n        this.forceUpdate()\n    }\n\n    closeModal = () => {\n        this.showModal = false\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <div>\n            <CreateNewMessage visible={this.showModal} close={this.closeModal} create_new={this.props.create_new}/>\n            <a onClick={this.onClick}> <Card size=\"small\" style={{marginTop:\".5%\"}}>\n                <Row>\n                <Icon style={{ fontSize: \"25px\"}} type=\"plus-circle\" />\n                <p>Create New Message</p>\n                </Row>\n            </Card>\n            </a>\n            </div>\n        )\n    }\n}\n\nexport default CreateNewCard","import React, {Component} from 'react'\nimport DisplayMessageCards from \"../views/display_message_cards\";\nimport ElectronHeader from \"../components/electron_header\";\nimport ElectronFooter from \"../components/electron_footer\";\nimport CreateNewCard from \"../components/create_new_card\";\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.message_list = [\n                {\"name\":\"Beave\", \"timestamp\":\"11:02 pm\", \"preview\":\"Help me please. Laura is still here\"},\n                {\"name\":\"Longo\", \"timestamp\": \"8:00 pm\", \"preview\": \"I'm out\"},\n                {\"name\":\"Kai\", \"timestamp\": \"7:30 am\", \"preview\": \"I wish I were out\"},\n                {\"name\":\"Ori\", \"timestamp\": \"2:59 am\", \"preview\": \"Nerds\"}\n        ]\n    }\n\n    createNewMessage = (username, initial_text) => {\n        const date = new Date()\n        const timestamp = date.getHours() + \":\" + date.getMinutes() + \" \"\n        this.message_list.push({\"name\": username, \"timestamp\":timestamp, \"preview\" : initial_text})\n        this.forceUpdate()\n        console.log(this.message_list)\n        console.log(\"new\")\n    }\n\n    render() {\n        console.log(\"rendering main\")\n        console.log(this.message_list)\n        return (\n            <div style={{backgroundColor:'#e8e8e8'}}>\n                <ElectronHeader/>\n                <CreateNewCard create_new={this.createNewMessage}/>\n                <DisplayMessageCards cards_list={this.message_list}/>\n                <ElectronFooter/>\n            </div>\n        )\n    }\n}\nexport default MainPage","import React, {Component} from 'react'\nimport {Icon, Button} from 'antd'\nimport { Input } from 'antd';\n\nconst { Search } = Input;\n\nclass ChatInput extends Component {\n    constructor(props) {\n        super(props)\n        this.onSend = props.onSend\n        this.text = \"\"\n        // this.send_message = props.send_message()\n    }\n    state = {\n        message : \"\"\n    }\n    handleChange(e) {\n        console.log(e.target.value)\n        this.text = e.target.value\n        this.forceUpdate()\n        // this.setState({\n        //     message: e.target.value\n        // })\n        // console.log(this.state.message)\n    }\n\n    clear () {\n        this.text = \"\"\n        this.forceUpdate()\n    }\n\n\n\n    // onSearch(value, event) {\n    //     console.log(value)\n    //\n    //     // console.log(e.target.text)\n    // }\n    // onSend(e) {\n    //     // props.\n    //     console.log(e)onChange={this.handleUsernameChange.bind(this)} value={this.state.username}\n    // {/*<Search onSearch={this.props.onSend} onSearch={this.clear} placeholder=\"Type Message...\" enterButton=\"Send\" onChange={this.handleChange.bind(this)} value={this.text}/>*/}\n\n    // }\n    render() {\n        return (\n\n        <Search onSearch={this.props.onSend} placeholder=\"Type Message...\" enterButton=\"Send\"/>\n        )\n    }\n}\n\nexport default ChatInput","import React, {Component} from \"react\";\nimport {Card, Col, Row} from \"antd\";\nimport \"./message.css\"\n\nclass Message extends Component {\n    constructor(props) {\n        super(props)\n        this.text = props.text\n        this.mine = props.mine\n    }\n    render() {\n        const text = this.text\n        if (this.mine) {\n            return (\n                <Row>\n                <Col span={8} offset={16}>\n                    <p className=\"messageMineText\">{text}</p>\n                </Col>\n                </Row>\n            )\n        }\n        else {\n            return (\n                <Row>\n                <Col span={8}>\n                    <p className=\"messageNotMineText\">{text}</p>\n                </Col>\n                </Row>\n            )\n        }\n\n    }\n}\n\nexport default Message","import React, {Component} from \"react\";\nimport Message from \"../components/message\";\nimport ReactQueryParams from 'react-query-params';\nimport BackBar from \"../components/back_bar\";\nimport {Col, Icon, Row} from \"antd\";\nimport {Link} from 'react-router-dom';\nclass DisplayMessages extends Component {\n    constructor(props) {\n        super(props)\n        // this.messages = props.messages\n        // this.getMessages = props.getMessages\n        // this.messageHTML = this.renderMessages()\n    }\n\n    renderMessages() {\n        let messageHTML = (\n            <div style={{}}>\n                <Row style={{backgroundColor:\"white\"}}>\n                    <Col span={8}>\n                        <Link to=\"/home\"><Icon style={{fontSize:\"20px\", marginTop:\"11%\", marginLeft:\"0%\"}} type=\"left-circle\" /></Link>\n                    </Col>\n                    <Col style={{fontSize:\"18px\", marginTop:\"3%\"}} span={8}>\n                        <p>A Krantz</p>\n                    </Col>\n                    <Col span={8}>\n                    </Col>\n                </Row>\n                {this.props.getMessages().map(function (message, index) {\n                    console.log(message)\n                    return (\n                        <Message text={message[\"text\"]} mine={message[\"mine\"]}/>\n                    )\n                })}\n            </div>\n        )\n        return messageHTML\n    }\n\n\n    render() {\n        // console.log(\"SKJDKJHFKJHDFKLJHFD \" + this.queryParams.user)\n        const messageHTML = this.renderMessages()\n        console.log(\"rendering \" + messageHTML)\n        return (\n            <div>\n                {/*<p>{params.username}</p>*/}\n            {messageHTML}\n            </div>\n        )\n    }\n}\n\nexport default DisplayMessages","import React, {Component} from 'react'\nimport { Menu, Icon } from 'antd';\n\nclass BackBar extends Component {\n    render() {\n        return (\n            <Menu>\n                <Menu.item>\n                    Back <Icon type=\"left-circle\" />\n                </Menu.item>\n            </Menu>\n        )\n    }\n}\n\nexport default BackBar","import React, {Component} from 'react'\nimport ChatInput from \"../components/chat_input\";\nimport {Input, Icon} from \"antd\";\nimport DisplayMessages from \"../views/display_messages\";\n\nclass MessagingPage extends Component {\n    constructor(props) {\n        super(props)\n        this.messages = [\n            {\"text\":\"hello you. why do you like to eat steak when chicken is tastier?\", \"mine\":false},\n            {\"text\":\"hello now\", \"mine\":false},\n            {\"text\":\"goodbye\", \"mine\":true},\n            {\"text\":\"Good Morning. What's up\", \"mine\": false},\n            {\"text\":\"The cow just went for a walk. All is well\", \"mine\": true},\n            {\"text\":\"Cool\", \"mine\": false},\n            {\"text\":\"Let's meet today\", \"mine\": false},\n            {\"text\":\"sure\", \"mine\": true},\n        ]\n    }\n\n    // send_message(text) {\n    //     this.messages.push(text)\n    // }\n    onSend = (e) => {\n        this.messages.push({\"text\":e, \"mine\":true})\n        console.log(\"sent \" + e)\n        this.forceUpdate()\n    }\n\n    getMessages = () => {\n        // console.log(\"this messages \",)\n        return this.messages\n    }\n    render() {\n        return (\n            <div style={{backgroundColor:'#e8e8e8'}}>\n                <DisplayMessages messages={this.messages} getMessages={this.getMessages}/>\n                <ChatInput onSend={this.onSend}/>\n            </div>\n        )\n    }\n}\n\nexport default MessagingPage","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ElectronHeader from \"./components/electron_header\";\nimport MessageCard from \"./components/message_card\";\nimport MainPage from \"./pages/main_page\";\nimport MessagingPage from \"./pages/messaging_page\";\nimport {Switch, Router, Route, HashRouter} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter>\n            <Switch>\n            <Route path=\"/home\">\n                <MainPage/>\n            </Route>\n            <Route path=\"/messages\">\n                <MessagingPage/>\n            </Route>\n\n            <Route path=\"/\">\n                <MainPage/>\n            </Route>\n            </Switch>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}