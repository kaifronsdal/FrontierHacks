{"version":3,"sources":["logo.svg","Components/vote.js","Components/post.js","Views/posts.js","Views/subforum.js","Pages/home.js","Pages/login.js","Pages/signup.js","Pages/community.js","Pages/post.js","Pages/landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Vote","props","handleUpVote","state","voteState","setState","handleDownVote","votes","numComments","this","style","color","type","console","log","className","marginBottom","id","onClick","getUpIcon","fontSize","paddingRight","paddingLeft","getDownIcon","onSave","React","Component","Paragraph","Typography","Post","handleCancel","visible","showModal","pop","subforum","author","tags","content","comments","time","i","length","push","cont","split","e","target","onclick","parentElement","document","getElementById","padding","subTitle","name","extra","paddingTop","comment","footer","onCancel","width","maxWidth","height","test","bind","title","path","getTags","avatar","src","getContent","getPop","Posts","posts","subforums","undefined","margin","marginRight","Subforum","numMembers","description","joined","handleJoin","paddingBottom","getJoin","handlePost","Home","span","NormalLoginForm","handleSubmit","preventDefault","form","validateFields","err","values","getFieldDecorator","onSubmit","Item","rules","required","message","prefix","placeholder","Password","valuePropName","initialValue","htmlType","Login","Form","create","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","value","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","tailFormItemLayout","wrapperCol","xs","offset","sm","labelCol","label","whitespace","hasFeedback","validator","onBlur","href","SignUp","Community","trim","addPost","TextArea","Search","Input","Content","Layout","Footer","Landing","handleOk","confirmLoading","setTimeout","showModalLogin","showModalSignup","showModalPost","showProfile","isLoggedIn","user","loggedIn","disabledtrue","reroute","key","display","flexWrap","textAlign","onOk","okButtonProps","disabled","getFooter","onSuccess","getModalContent","to","border","backgroundColor","alignItems","flex","minWidth","marginLeft","onSearch","menu","getReroute","exact","render","match","redirect","params","getModal","App","stateTemp","community","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4400d0b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './vote.css';\nimport {Icon, Row} from \"antd\";\n\nexport default class Vote extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            voteState: 0,\n            votes: props.votes,\n            numComments: props.numComments,\n        }\n    }\n\n    handleUpVote = () => {\n        if (this.state.voteState === 1) {\n            this.setState({voteState: 0});\n        } else {\n            this.setState({voteState: 1});\n        }\n    };\n\n    handleDownVote = () => {\n        if (this.state.voteState === -1) {\n            this.setState({voteState: 0});\n        } else {\n            this.setState({voteState: -1});\n        }\n    };\n\n    getUpIcon() {\n        if (this.state.voteState === 1) {\n            return (<Icon style={{color: 'red'}} type=\"caret-up\"/>)\n        } else {\n            return (<Icon type=\"caret-up\"/>)\n        }\n    }\n\n    getDownIcon() {\n        if (this.state.voteState === -1) {\n            return (<Icon style={{color: 'blue'}} type=\"caret-down\"/>)\n        } else {\n            return (<Icon type=\"caret-down\"/>)\n        }\n    }\n\n    onSave() {\n        console.log(\"saved\");\n    }\n\n    render() {\n        return (\n            <Row className=\"contentLink\" type=\"flex\" style={{marginBottom: '-17px'}}>\n                <a id=\"vote\" onClick={this.handleUpVote}>\n                    {this.getUpIcon()}\n                </a>\n\n                <p\n                    style={{\n                        fontSize: '15px',\n                        paddingRight: '3px',\n                        paddingLeft: '3px'\n                    }}\n                >\n                    {this.state.votes + this.state.voteState}\n                </p>\n                <a id=\"vote\" onClick={this.handleDownVote}>\n                    {this.getDownIcon()}\n                </a>\n                <a id=\"save\" style={{paddingLeft: '20px'}} onClick={this.onSave}>\n                    <Icon style={{paddingRight: '5px'}} type=\"save\"/>\n                    Save\n                </a>\n                <div style={{paddingLeft: '20px'}}>\n                    <Icon style={{paddingRight: '5px'}} type=\"message\"/>\n                    {this.state.numComments} Comments\n                </div>\n            </Row>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './post.css';\nimport Vote from './vote'\nimport {PageHeader, Button, Tag, Row, Typography, Icon, Card, Modal} from 'antd';\n\nimport {Link} from 'react-router-dom';\n\nconst {Paragraph} = Typography;\n\nexport default class Post extends React.Component {\n    constructor(props) {\n        super(props);\n        let pop = true;\n        if (props.pop) {\n            pop = false;\n        }\n        this.state = {\n            subforum: props.subforum,\n            author: props.author,\n            tags: props.tags,\n            votes: props.votes,\n            content: props.content,\n            numComments: props.numComments,\n            comments: props.comments,\n            time: props.time,\n            pop: pop\n        };\n    }\n\n    getTags() {\n        let tags = [];\n\n        for (let i = 0; i < this.state.tags.length; i++) {\n\n            tags.push(<Tag color=\"blue\">{this.state.tags[i]}</Tag>)\n        }\n        return (<div>{tags}</div>)\n    }\n\n    getContent() {\n        let cont = [];\n        let content = this.state.content.split(\"\\n\");\n        for (let i = 0; i < content.length; i++) {\n            cont.push(<div>{content[i]}<br/></div>)\n        }\n        return (\n            <div className=\"content\">\n                <Paragraph>\n                    {cont}\n                </Paragraph>\n            </div>\n        )\n    }\n\n    test(e) {\n        let target = e.target;\n        if (target.onclick != null) {\n            return;\n        }\n        while (target.parentElement !== document.getElementById(\"post\")) {\n            target = target.parentElement;\n            if (target.onclick != null) {\n                return;\n            }\n        }\n        console.log(\"test\")\n        this.showModal();\n    }\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    getPop() {\n        if (this.state.pop) {\n            let comments = [];\n            for (let i = 0; i < this.state.comments.length; i++) {\n                comments.push(\n                    <PageHeader\n                        style={{padding: '0px'}}\n                        subTitle={<div style={{fontSize:'16px'}}>{this.state.comments[i].name}</div>}\n                        extra={\n                            <Paragraph style={{fontSize:'12px', paddingTop:'5px'}}>{this.state.comments[i].time}</Paragraph>}\n                    >\n                        <div style={{fontSize:'14px'}}>{this.state.comments[i].comment}</div>\n                    </PageHeader>);\n            }\n            return (<Modal\n                visible={this.state.visible}\n                footer={[]}\n                onCancel={this.handleCancel}\n                style={{width: '100%', maxWidth: '80%', height: '100%'}}\n            >\n                <div>\n                    <Post subforum={this.state.subforum}\n                          author={this.state.author}\n                          tags={this.state.tags}\n                          votes={this.state.votes}\n                          content={this.state.content}\n                          numComments={this.state.numComments}\n                          pop={true}/>\n                    <div className=\"content\">\n                        <Paragraph>\n                            {comments}\n                        </Paragraph>\n                    </div>\n                </div>\n            </Modal>);\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                <a onClick={this.test.bind(this)} id=\"post\">\n                    <Card>\n                        <PageHeader\n                            title={<Link id=\"header-title\"\n                                         path={`/${this.state.subforum}`}>{this.state.subforum}</Link>}\n                            style={{padding: '0px'}}\n                            subTitle={this.state.author}\n                            tags={this.getTags()}\n                            extra={\n                                <Paragraph>{this.state.time}</Paragraph>}\n                            avatar={{src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4'}}\n                        >\n                            {this.getContent()}\n                            <Vote votes={this.state.votes} numComments={this.state.numComments}/>\n                        </PageHeader>\n                    </Card>\n                </a>\n                {this.getPop()}\n            </div>\n        );\n\n    }\n\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './posts.css';\nimport Post from '../Components/post'\n\nexport default class Posts extends React.Component {\n    constructor(props) {\n        super(props);\n        var posts = null;\n        var subforums = props.subforums;\n        if (subforums === null || subforums === undefined) {\n            this.state = {\n                posts: [],\n                subforum: \"\"\n            };\n            return;\n        }\n        for (let i = 0; i < subforums.length; i++) {\n            if (subforums[i].subforum === props.subforum) {\n                posts = subforums[i].posts;\n                break;\n            }\n        }\n        this.state = {\n            posts: posts,\n            subforum: props.subforum,\n        }\n    }\n\n    render() {\n\n        let posts = [];\n        if (this.state.posts === null) {\n            return null;\n        }\n        for (let i = 0; i < this.state.posts.length; i++) {\n\n            posts.push(<Post subforum={this.state.posts[i].subforum}\n                             author={this.state.posts[i].author}\n                             tags={this.state.posts[i].tags}\n                             votes={this.state.posts[i].votes}\n                             content={this.state.posts[i].content}\n                             numComments={this.state.posts[i].numComments}\n                             comments={this.state.posts[i].comments}\n                             time={this.state.posts[i].time}/>)\n        }\n        return (<div style={{margin: '20px', marginRight: '0px'}}>{posts}</div>);\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './subforum.css';\n\nimport {Card, Row, Col, Button} from 'antd';\n\nexport default class Subforum extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.name,\n            numMembers: props.numMembers,\n            description: props.description,\n            joined: props.joined,\n        }\n    }\n\n    handleJoin() {\n        console.log(\"joined\");\n    }\n\n    getJoin() {\n        if (this.state.joined) {\n            return (<Button style={{width: '100%'}} onClick={this.handleJoin}>Leave</Button>)\n        } else {\n            return (<Button style={{width: '100%'}} onClick={this.handleJoin}>Join</Button>)\n        }\n    }\n\n    handlePost() {\n        console.log(\"post\");\n    }\n\n    render() {\n        return (\n            <Card style={{margin: '20px'}} title={this.state.name}>\n                <Col style={{fontSize: '20px', paddingBottom: '10px'}}>\n                    {this.state.numMembers} Members\n                </Col>\n                <Col style={{fontSize: '15px', paddingBottom: '10px'}}>\n                    {this.state.description}\n                </Col>\n                <Col style={{paddingBottom: '10px'}}>\n                    {this.getJoin()}\n                </Col>\n                <Col>\n                    <Button style={{width: '100%'}} onClick={this.handlePost}>Post</Button>\n                </Col>\n            </Card>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './home.css';\nimport {Col, Row} from \"antd\";\nimport Posts from \"../Views/posts\"\nimport Subforum from \"../Views/subforum\"\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Col\n                    span={18}>\n                    <Posts/>\n                </Col>\n                <Col span={6}>\n                    <Subforum name=\"Forums\" numMembers={100}\n                              description={\"This is the best forum ever.\"}\n                              joined={false}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './login.css';\n\nimport {Form, Icon, Input, Button, Checkbox} from 'antd';\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                //this.props.onSuccess();\n            }\n        });\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{required: true, message: 'Please input your username!'}],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Username\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{required: true, message: 'Please input your Password!'}],\n                    })(\n                        <Input.Password\n                            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('remember', {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                    })(<Checkbox>Remember me</Checkbox>)}\n                    <Button style={{width: '100%'}} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst Login = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default Login;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './signup.css';\n\nimport {Form, Input, Tooltip, Icon, Checkbox, Button,} from 'antd';\n\nclass NormalLoginForm extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const {value} = e.target;\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const {form} = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const {form} = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], {force: true});\n        }\n        callback();\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 8},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 16},\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n\n        return (\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                <Form.Item\n                    label={\n                        <span>\n              Nickname&nbsp;\n                            <Tooltip title=\"What do you want others to call you?\">\n                <Icon type=\"question-circle-o\"/>\n              </Tooltip>\n            </span>\n                    }\n                >\n                    {getFieldDecorator('nickname', {\n                        rules: [{required: true, message: 'Please input your nickname!', whitespace: true}],\n                    })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator('password', {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                            {\n                                validator: this.validateToNextPassword,\n                            },\n                        ],\n                    })(<Input.Password/>)}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" hasFeedback>\n                    {getFieldDecorator('confirm', {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            {\n                                validator: this.compareToFirstPassword,\n                            },\n                        ],\n                    })(<Input.Password onBlur={this.handleConfirmBlur}/>)}\n                </Form.Item>\n\n                <Form.Item {...tailFormItemLayout}>\n                    {getFieldDecorator('agreement', {\n                        valuePropName: 'checked',\n                    })(\n                        <Checkbox>\n                            I have read the <a href=\"\">agreement</a>\n                        </Checkbox>,\n                    )}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst SignUp = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default SignUp;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './community.css';\nimport {Col, Row} from \"antd\";\nimport Posts from \"../Views/posts\"\nimport Subforum from \"../Views/subforum\"\n\nexport default class Community extends React.Component {\n    constructor(props) {\n        super(props);\n        var subforums = props.subforums;\n        console.log(subforums)\n        var subforum = null;\n        for (let i = 0; i < subforums.length; i++) {\n            if (subforums[i].subforum === props.name) {\n                subforum = subforums[i];\n                break;\n            }\n        }\n        console.log(props.subforum)\n        if (subforum === null) {\n            this.state = {\n                name: \"\",\n                numMembers: 0,\n                description: \"\",\n                joined: false,\n                subforums: null\n            };\n            return;\n        }\n        this.state = {\n            name: props.name,\n            numMembers: subforum.numMembers,\n            description: subforum.description,\n            joined: subforum.joined,\n            subforums: subforums\n        }\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col\n                    span={18}>\n                    <Posts subforums={this.state.subforums} subforum={this.state.name}/>\n                </Col>\n                <Col span={6}>\n                    <Subforum name={this.state.name} numMembers={this.state.numMembers}\n                              description={this.state.description}\n                              joined={this.state.joined}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './post.css';\n\nimport {Form, Input, Button} from 'antd';\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);//form values\n                //this.props.onSuccess();\n                let tags = values.tags;\n                tags = tags.split(\",\");\n                for (var i in tags) {\n                    i = i.trim();\n                }\n                values.tags = tags;\n                this.props.addPost(values);\n            }\n        });\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{width: '450px'}}>\n                <Form.Item label=\"Title\" style={{width: '450px'}}>\n                    {getFieldDecorator('description', {\n                        rules: [{required: true, message: 'Please input your description!'}],\n                    })(\n                        <Input\n                            style={{width: '450px'}}\n                            placeholder=\"description\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item label=\"Tags\" style={{width: '450px'}}>\n                    {getFieldDecorator('tags', {\n                        rules: [{required: false, message: 'Please input your description!'}],\n                    })(\n                        <Input.TextArea\n                            style={{width: '450px'}}\n                            placeholder=\"tags\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item label=\"Community\" style={{width: '450px'}}>\n                    {getFieldDecorator('community', {\n                        rules: [{required: true, message: 'Please choose a community!'}],\n                    })(\n                        <Input\n                            style={{width: '450px'}}\n                            placeholder=\"all\"\n                        />,\n                    )}\n                    <Button style={{width: '450px'}} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Post\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst Post = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default Post;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './landing.css';\nimport Home from \"./home\"\nimport Login from \"./login\"\nimport SignUp from \"./signup\"\nimport Community from \"./community\"\nimport Post from \"./post\"\n\nimport {Redirect} from 'react-router-dom';\nimport {Layout, Icon, Button, Input, Modal, Form} from 'antd';\nimport {\n    Route,\n    Link,\n    HashRouter,\n    Switch\n} from \"react-router-dom\";\n\nconst {Search} = Input;\nconst {Content, Footer} = Layout;\n\nexport default class Landing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subforums: props.subforums,\n            isLoggedIn: props.user.loggedIn,\n            state: '',\n            visible: false,\n            confirmLoading: false,\n            disabledtrue: true,\n            reroute: \"\",\n        };\n    }\n\n    handleOk = () => {\n        this.setState({\n            confirmLoading: true,\n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                confirmLoading: false,\n            });\n        }, 2000);\n    };\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    showModalLogin = () => {\n        this.setState({\n            state: 'Login',\n            visible: true,\n        });\n    };\n\n    showModalSignup = () => {\n        this.setState({\n            state: 'Signup',\n            visible: true,\n        });\n    };\n\n    showModalPost = () => {\n        this.setState({\n            state: 'Post',\n            visible: true,\n        });\n    };\n\n    showProfile = () => {\n\n    };\n    menu() {\n        if (!this.state.isLoggedIn) {\n            return (<div id=\"buttons\" style={{\n                display: 'flex',\n                flexWrap: 'nowrap'\n            }}>\n                <a onClick={this.showModalLogin}><Button key=\"login\"><Icon type=\"user\"/>Login</Button></a>\n                <a onClick={this.showModalSignup}><Button key=\"signup\"><Icon type=\"user\"/> Sign Up</Button></a>\n                <a onClick={this.showModalPost}><Button key=\"post\" type=\"primary\">Post</Button></a>\n            </div>);\n        } else {\n            return (<div id=\"buttons\">\n                <a onClick={this.showProfile}><Button key=\"profile\">Profile</Button></a>\n                <a onClick={this.showModalPost}><Button key=\"post\" type=\"primary\">Post</Button></a>\n            </div>);\n        }\n    }\n\n    getFooter() {\n        if (this.state.state === \"Login\") {\n            return (<div style={{width: '100%', textAlign: 'left'}}>Or <a onClick={this.showModalSignup}>register\n                now!</a></div>);\n        } else if (this.state.state === \"Signup\") {\n            return (<div style={{width: '100%', textAlign: 'left'}}>Or <a onClick={this.showModalLogin}>log in\n                now!</a></div>);\n        }\n    }\n\n    getModalContent() {\n        switch (this.state.state) {\n            case 'Login':\n                return (<Login/>);\n            case 'Signup':\n                return (<SignUp/>);\n            case 'Post':\n                return (<Post addPost={this.props.addPost}/>);\n            default:\n                return null;\n        }\n    }\n\n    getModal() {\n        switch (this.state.state) {\n            case 'Login':\n                return (\n                    <Modal\n                        title={this.state.state}\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        confirmLoading={this.state.confirmLoading}\n                        okButtonProps={{disabled: this.state.disabled}}\n                        footer={[this.getFooter()]}\n                        onCancel={this.handleCancel}\n                        onSuccess={this.handleOk}\n                        style={{width: '100%', maxWidth: '300px', height: '100%'}}\n                    >\n                        <div>\n                            {this.getModalContent()}\n\n                        </div>\n                    </Modal>);\n            case 'Signup':\n                return (\n                    <Modal\n                        title={this.state.state}\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        confirmLoading={this.state.confirmLoading}\n                        okButtonProps={{disabled: this.state.disabled}}\n                        footer={[this.getFooter()]}\n                        onCancel={this.handleCancel}\n                        onSuccess={this.handleOk}\n                        style={{width: '100%', maxWidth: '500px', height: '100%'}}\n                    >\n                        <div>\n                            {this.getModalContent()}\n\n                        </div>\n                    </Modal>);\n            case 'Post':\n                return (\n                    <Modal\n                        title={this.state.state}\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        confirmLoading={this.state.confirmLoading}\n                        okButtonProps={{disabled: this.state.disabled}}\n                        footer={[this.getFooter()]}\n                        onCancel={this.handleCancel}\n                        onSuccess={this.handleOk}\n                        style={{width: '100%', maxWidth: '650px', height: '100%'}}\n                    >\n                        <div>\n                            {this.getModalContent()}\n                        </div>\n                    </Modal>);\n        }\n        return null;\n    }\n\n    reroute(value) {\n        this.setState({reroute: value});\n    }\n\n    getReroute() {\n        //console.log(this.props.history);\n        if (this.state.reroute === \"\") {\n            return null;\n        } else {\n            const reroute = this.state.reroute;\n            this.setState({reroute: \"\"});\n            return <Redirect push to={`/${reroute}`}/>;\n        }\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <Layout className=\"layout\">\n                    <div style={{\n                        border: '1px solid #e8e8e8',\n                        backgroundColor: '#FFF',\n                        width: '100%',\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        alignItems: 'flex-start',\n                        paddingTop: '5px'\n                    }}>\n                        <div\n                            style={{\n                                flex: 4,\n                                marginRight: '5%',\n                                marginBottom: '-25px',\n                                minWidth: '300px',\n                                display: 'flex'\n                            }}>\n\n                            <Link to=\"/\">\n                                <p style={{\n                                    fontSize: '25px',\n                                    marginLeft: '15px',\n                                    marginRight: '20px',\n                                }}>Forum</p>\n                            </Link>\n                            <div style={{width: '100%', paddingTop: '5px'}}>\n                                <Search\n                                    placeholder=\"input search text\"\n                                    onSearch={value => this.reroute(value)}\n                                />\n                            </div>\n                        </div>\n                        <div style={{flex: 2, paddingTop: '2px', marginBottom: '8px'}}>\n                            {this.menu()}\n                        </div>\n                    </div>\n\n                    <Content>\n                        <Switch>\n                            {this.getReroute()}\n                            <Route exact path=\"/\">\n                                <Home/>\n                            </Route>\n                            <Route path={`/:name`}\n                                   render={({match}) => (\n                                       <div><Community redirect={this.reroute} subforums={this.state.subforums}\n                                                       name={match.params.name}/>\n                                       </div>)}/>\n                        </Switch>\n                    </Content>\n\n                    <Footer>\n\n                    </Footer>\n                </Layout>\n                {this.getModal()}\n            </HashRouter>\n        );\n    }\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport logo from './logo.svg';\nimport Landing from './Pages/landing';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nvar user = {\n    name: \"Kai Fronsdal\",\n    loggedIn: true\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subforums: [{\n                subforum: \"news\",\n                numMembers: 100,\n                description: \"The best description\",\n                joined: true,\n                posts: [{\n                    author: \"Kai Fronsdal\", tags: [\"Tag A\", \"Tag B\"], votes: 30,\n                    content: \"Ant Design interprets the color system into two levels: a\" +\n                        \"system-level color system and a product-level color system.\\n\\n\" +\n                        \"Ant Design's design team preferred to design with the HSB color \" +\n                        \"model, which makes it easier for designers to have a clear psychological \" +\n                        \"expectation of color when adjusting colors, as well as facilitate \" +\n                        \"communication in teams.\", numComments: 3, time: \"20/25/2019\",\n                    comments: [\n                        {\n                            name: \"Alex\",\n                            comment: \"Wow!\",\n                            time: \"20/25/2019\"\n                        },\n                        {\n                            name: \"Daniel\",\n                            comment: \"Much Cool\",\n                            time: \"20/25/2019\"\n                        }\n                    ]\n                }]\n            }, {\n                subforum: \"meme\",\n                numMembers: 420,\n                description: \"asjdflkasjdfhlkjdshf\",\n                joined: false,\n                posts: [{\n                    author: \"Uri Dickman\", tags: [\"Tagz\"], votes: 107,\n                    content: \"The quick brown fox jumped over the lazy dog.\", numComments: 56, time: \"4/1/2019\",\n                    comments: [\n                        {\n                            name: \"Daniel\",\n                            comment: \"So Cool!\",\n                            time: \"20/25/2019\"\n                        },\n                        {\n                            name: \"Alex\",\n                            comment: \"Sweet\",\n                            time: \"20/25/2019\"\n                        }\n                    ]\n                }]\n            }]\n        };\n    }\n\n    addPost(values) {\n        var stateTemp = this.state.subforums;\n        for (let i = 0; i < stateTemp.length; i++) {\n            if (values.community === stateTemp[i].subforum) {\n                stateTemp[i].posts.push({\n                    author: user.name,\n                    content: values.description,\n                    tags: values.tags,\n                    votes: 0,\n                    numComments: 0,\n                    time: \"11/24/19\",\n                    comments: []\n                });\n                this.setState({subforums: stateTemp});\n                console.log(this.state.subforums);\n                return;\n            }\n        }\n        stateTemp.push({\n            subforum: values.community,\n            numMembers: 10,\n            description: \"An awesome subform\",\n            joined: true,\n            posts: [{\n                author: user.name,\n                content: values.description,\n                tags: values.tags,\n                votes: 0,\n                numComments: 0,\n                time: \"11/24/19\",\n                comments: []\n            }]\n        });\n        this.setState({subforums: stateTemp});\n        console.log(this.state.subforums);\n    }\n\n    render() {\n        return (<Landing subforums={this.state.subforums} addPost={this.addPost.bind(this)} user={user}/>);\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}